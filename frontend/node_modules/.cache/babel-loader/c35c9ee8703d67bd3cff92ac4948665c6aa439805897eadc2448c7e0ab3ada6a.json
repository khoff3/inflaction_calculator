{"ast":null,"code":"var _jsxFileName = \"/Users/khoff/Code/inflaction_calculator/frontend/src/components/InflationData.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { Table } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction InflationData({\n  draftId,\n  liveUpdate\n}) {\n  _s();\n  const [inflationData, setInflationData] = useState(null);\n  useEffect(() => {\n    const fetchInflationData = async () => {\n      try {\n        const response = await axios.post('/inflation', {\n          draft_id: draftId\n        });\n        setInflationData(response.data);\n      } catch (error) {\n        console.error('Error fetching inflation data:', error);\n      }\n    };\n    if (liveUpdate) {\n      const interval = setInterval(fetchInflationData, 2000);\n      return () => clearInterval(interval);\n    } else {\n      fetchInflationData();\n    }\n  }, [draftId, liveUpdate]);\n  if (!inflationData) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 32\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n}\n_s(InflationData, \"z0ZZGd3KoyIJ/Jp21/nGrPgI/XQ=\");\n_c = InflationData;\nexport default InflationData;\nvar _c;\n$RefreshReg$(_c, \"InflationData\");","map":{"version":3,"names":["React","useEffect","useState","axios","Table","jsxDEV","_jsxDEV","InflationData","draftId","liveUpdate","_s","inflationData","setInflationData","fetchInflationData","response","post","draft_id","data","error","console","interval","setInterval","clearInterval","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/khoff/Code/inflaction_calculator/frontend/src/components/InflationData.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { Table } from 'react-bootstrap';\n\nfunction InflationData({ draftId, liveUpdate }) {\n    const [inflationData, setInflationData] = useState(null);\n\n    useEffect(() => {\n        const fetchInflationData = async () => {\n            try {\n                const response = await axios.post('/inflation', { draft_id: draftId });\n                setInflationData(response.data);\n            } catch (error) {\n                console.error('Error fetching inflation data:', error);\n            }\n        };\n\n        if (liveUpdate) {\n            const interval = setInterval(fetchInflationData, 2000);\n            return () => clearInterval(interval);\n        } else {\n            fetchInflationData();\n        }\n    }, [draftId, liveUpdate]);\n\n    if (!inflationData) return <div>Loading...</div>;\n\n    return (\n        <div>\n            {/* Render inflation data in table or other format */}\n        </div>\n    );\n}\n\nexport default InflationData;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,KAAK,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,aAAaA,CAAC;EAAEC,OAAO;EAAEC;AAAW,CAAC,EAAE;EAAAC,EAAA;EAC5C,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAExDD,SAAS,CAAC,MAAM;IACZ,MAAMY,kBAAkB,GAAG,MAAAA,CAAA,KAAY;MACnC,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAMX,KAAK,CAACY,IAAI,CAAC,YAAY,EAAE;UAAEC,QAAQ,EAAER;QAAQ,CAAC,CAAC;QACtEI,gBAAgB,CAACE,QAAQ,CAACG,IAAI,CAAC;MACnC,CAAC,CAAC,OAAOC,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;MAC1D;IACJ,CAAC;IAED,IAAIT,UAAU,EAAE;MACZ,MAAMW,QAAQ,GAAGC,WAAW,CAACR,kBAAkB,EAAE,IAAI,CAAC;MACtD,OAAO,MAAMS,aAAa,CAACF,QAAQ,CAAC;IACxC,CAAC,MAAM;MACHP,kBAAkB,CAAC,CAAC;IACxB;EACJ,CAAC,EAAE,CAACL,OAAO,EAAEC,UAAU,CAAC,CAAC;EAEzB,IAAI,CAACE,aAAa,EAAE,oBAAOL,OAAA;IAAAiB,QAAA,EAAK;EAAU;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;EAEhD,oBACIrB,OAAA;IAAAkB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEK,CAAC;AAEd;AAACjB,EAAA,CA5BQH,aAAa;AAAAqB,EAAA,GAAbrB,aAAa;AA8BtB,eAAeA,aAAa;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}