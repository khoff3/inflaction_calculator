{"ast":null,"code":"import React,{useState,useEffect}from'react';import{BrowserRouter as Router,Route,Switch,useHistory}from'react-router-dom';import Plotly from'plotly.js-dist';import LandingPage from'./components/LandingPage';import InflationData from'./components/InflationData';import ScatterPlot from'./components/ScatterPlot';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function App(){const[scatterDataLoaded,setScatterDataLoaded]=useState(false);const[inflationData,setInflationData]=useState(null);const[r2Data,setR2Data]=useState(null);const[liveUpdate,setLiveUpdate]=useState(false);const[draftId,setDraftId]=useState(\"\");const fetchInflationData=async()=>{if(!draftId){console.error(\"Draft ID is required\");return;}try{const csrfTokenMeta=document.querySelector('meta[name=\"csrf-token\"]');if(!csrfTokenMeta){console.error(\"CSRF token not found\");return;}const csrfToken=csrfTokenMeta.getAttribute('content');const response=await fetch('/inflation',{method:'POST',headers:{'Content-Type':'application/x-www-form-urlencoded','Accept':'application/json','X-Requested-With':'XMLHttpRequest','X-CSRF-TOKEN':csrfToken},body:`draft_id=${draftId}`});if(!response.ok){throw new Error(`Error: ${response.statusText}`);}const data=await response.json();setInflationData(data);}catch(error){console.error('Error fetching inflation data:',error);}};const fetchScatterData=async()=>{if(!draftId){console.error(\"Draft ID is required\");return;}try{const response=await fetch(`/scatter_data?draft_id=${draftId}`);if(!response.ok){throw new Error(`Server responded with a status: ${response.status}`);}const text=await response.text();// Get raw response text for logging\ntry{const data=JSON.parse(text);// Attempt to parse JSON\nif(data&&data.scatterplot){const trace={x:data.scatterplot.pick_no,y:data.scatterplot.metadata_amount,mode:'markers',marker:{color:data.scatterplot.colors,size:10},text:data.scatterplot.player_names};const layout={xaxis:{title:'Pick Number'},yaxis:{title:'Amount'}};Plotly.react('scatterPlot',[trace],layout);setScatterDataLoaded(true);setR2Data(data.r2_values);// Store R^2 data\n}}catch(jsonError){console.error('Error parsing JSON:',jsonError);console.error('Response text:',text);}}catch(error){console.error('Error fetching scatter data:',error);}};useEffect(()=>{if(liveUpdate){const interval=setInterval(()=>{fetchInflationData();fetchScatterData();},2000);return()=>clearInterval(interval);}},[liveUpdate,draftId]);const handleToggleSwitch=()=>{setLiveUpdate(!liveUpdate);};const handleDraftIdChange=e=>{setDraftId(e.target.value);};return/*#__PURE__*/_jsx(Router,{children:/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"div\",{style:{margin:'1rem 0'},children:[/*#__PURE__*/_jsx(\"label\",{children:\"Live Update:\"}),/*#__PURE__*/_jsx(\"input\",{id:\"liveUpdateSwitch\",onChange:handleToggleSwitch,type:\"checkbox\"})]}),/*#__PURE__*/_jsxs(\"form\",{children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"draft_id\",children:\"Enter Draft ID:\"}),/*#__PURE__*/_jsx(\"input\",{id:\"draft_id\",name:\"draft_id\",type:\"text\",value:draftId,onChange:handleDraftIdChange})]}),/*#__PURE__*/_jsx(\"button\",{onClick:fetchScatterData,children:\"Load Data\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"tab\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"tablinks\",onClick:()=>setScatterDataLoaded(false),children:\"Inflation Data\"}),/*#__PURE__*/_jsx(\"button\",{className:\"tablinks\",onClick:fetchScatterData,children:\"Picks Over Time\"})]}),/*#__PURE__*/_jsxs(Switch,{children:[/*#__PURE__*/_jsx(Route,{exact:true,path:\"/\",component:LandingPage}),/*#__PURE__*/_jsx(Route,{path:\"/inflationdata\",render:()=>/*#__PURE__*/_jsx(InflationData,{draftId:draftId,liveUpdate:liveUpdate})}),/*#__PURE__*/_jsx(Route,{path:\"/scatterplot\",render:()=>/*#__PURE__*/_jsx(ScatterPlot,{draftId:draftId,scatterDataLoaded:scatterDataLoaded,r2Data:r2Data})})]})]})});}export default App;","map":{"version":3,"names":["React","useState","useEffect","BrowserRouter","Router","Route","Switch","useHistory","Plotly","LandingPage","InflationData","ScatterPlot","jsx","_jsx","jsxs","_jsxs","App","scatterDataLoaded","setScatterDataLoaded","inflationData","setInflationData","r2Data","setR2Data","liveUpdate","setLiveUpdate","draftId","setDraftId","fetchInflationData","console","error","csrfTokenMeta","document","querySelector","csrfToken","getAttribute","response","fetch","method","headers","body","ok","Error","statusText","data","json","fetchScatterData","status","text","JSON","parse","scatterplot","trace","x","pick_no","y","metadata_amount","mode","marker","color","colors","size","player_names","layout","xaxis","title","yaxis","react","r2_values","jsonError","interval","setInterval","clearInterval","handleToggleSwitch","handleDraftIdChange","e","target","value","children","style","margin","id","onChange","type","htmlFor","name","onClick","className","exact","path","component","render"],"sources":["/Users/khoff/Code/inflaction_calculator/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Route, Switch, useHistory } from 'react-router-dom';\nimport Plotly from 'plotly.js-dist';\nimport LandingPage from './components/LandingPage';\nimport InflationData from './components/InflationData';\nimport ScatterPlot from './components/ScatterPlot';\n\nfunction App() {\n    const [scatterDataLoaded, setScatterDataLoaded] = useState(false);\n    const [inflationData, setInflationData] = useState(null);\n    const [r2Data, setR2Data] = useState(null);\n    const [liveUpdate, setLiveUpdate] = useState(false);\n    const [draftId, setDraftId] = useState(\"\");\n\n    const fetchInflationData = async () => {\n        if (!draftId) {\n            console.error(\"Draft ID is required\");\n            return;\n        }\n        try {\n            const csrfTokenMeta = document.querySelector('meta[name=\"csrf-token\"]');\n            if (!csrfTokenMeta) {\n                console.error(\"CSRF token not found\");\n                return;\n            }\n            const csrfToken = csrfTokenMeta.getAttribute('content');\n            const response = await fetch('/inflation', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/x-www-form-urlencoded',\n                    'Accept': 'application/json',\n                    'X-Requested-With': 'XMLHttpRequest',\n                    'X-CSRF-TOKEN': csrfToken\n                },\n                body: `draft_id=${draftId}`\n            });\n            if (!response.ok) {\n                throw new Error(`Error: ${response.statusText}`);\n            }\n            const data = await response.json();\n            setInflationData(data);\n        } catch (error) {\n            console.error('Error fetching inflation data:', error);\n        }\n    };\n\n    const fetchScatterData = async () => {\n        if (!draftId) {\n            console.error(\"Draft ID is required\");\n            return;\n        }\n        try {\n            const response = await fetch(`/scatter_data?draft_id=${draftId}`);\n            if (!response.ok) {\n                throw new Error(`Server responded with a status: ${response.status}`);\n            }\n            const text = await response.text();  // Get raw response text for logging\n            try {\n                const data = JSON.parse(text);  // Attempt to parse JSON\n                if (data && data.scatterplot) {\n                    const trace = {\n                        x: data.scatterplot.pick_no,\n                        y: data.scatterplot.metadata_amount,\n                        mode: 'markers',\n                        marker: {\n                            color: data.scatterplot.colors,\n                            size: 10\n                        },\n                        text: data.scatterplot.player_names\n                    };\n                    const layout = {\n                        xaxis: { title: 'Pick Number' },\n                        yaxis: { title: 'Amount' }\n                    };\n                    Plotly.react('scatterPlot', [trace], layout);\n                    setScatterDataLoaded(true);\n                    setR2Data(data.r2_values); // Store R^2 data\n                }\n            } catch (jsonError) {\n                console.error('Error parsing JSON:', jsonError);\n                console.error('Response text:', text);\n            }\n        } catch (error) {\n            console.error('Error fetching scatter data:', error);\n        }\n    };\n\n    useEffect(() => {\n        if (liveUpdate) {\n            const interval = setInterval(() => {\n                fetchInflationData();\n                fetchScatterData();\n            }, 2000);\n            return () => clearInterval(interval);\n        }\n    }, [liveUpdate, draftId]);\n\n    const handleToggleSwitch = () => {\n        setLiveUpdate(!liveUpdate);\n    };\n\n    const handleDraftIdChange = (e) => {\n        setDraftId(e.target.value);\n    };\n\n    return (\n        <Router>\n            <div>\n                <div style={{ margin: '1rem 0' }}>\n                    <label>Live Update:</label>\n                    <input id=\"liveUpdateSwitch\" onChange={handleToggleSwitch} type=\"checkbox\" />\n                </div>\n                <form>\n                    <label htmlFor=\"draft_id\">Enter Draft ID:</label>\n                    <input id=\"draft_id\" name=\"draft_id\" type=\"text\" value={draftId} onChange={handleDraftIdChange} />\n                </form>\n                <button onClick={fetchScatterData}>Load Data</button>\n\n                <div className=\"tab\">\n                    <button className=\"tablinks\" onClick={() => setScatterDataLoaded(false)}>Inflation Data</button>\n                    <button className=\"tablinks\" onClick={fetchScatterData}>Picks Over Time</button>\n                </div>\n\n                <Switch>\n                    <Route exact path=\"/\" component={LandingPage} />\n                    <Route path=\"/inflationdata\" render={() => (\n                        <InflationData draftId={draftId} liveUpdate={liveUpdate} />\n                    )} />\n                    <Route path=\"/scatterplot\" render={() => (\n                        <ScatterPlot draftId={draftId} scatterDataLoaded={scatterDataLoaded} r2Data={r2Data} />\n                    )} />\n                </Switch>\n            </div>\n        </Router>\n    );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}