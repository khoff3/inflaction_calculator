{"ast":null,"code":"var _jsxFileName = \"/Users/khoff/Code/inflaction_calculator/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Plotly from 'plotly.js-dist';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [scatterDataLoaded, setScatterDataLoaded] = useState(false);\n  const [inflationData, setInflationData] = useState(null);\n  const [liveUpdate, setLiveUpdate] = useState(false);\n  const [draftId, setDraftId] = useState(\"\");\n  useEffect(() => {\n    if (liveUpdate) {\n      const interval = setInterval(() => {\n        fetchInflationData();\n        fetchScatterData();\n      }, 2000);\n      return () => clearInterval(interval);\n    }\n  }, [liveUpdate]);\n  async function fetchInflationData() {\n    try {\n      const csrfTokenElement = document.querySelector('meta[name=\"csrf-token\"]');\n      if (!csrfTokenElement) {\n        console.error('CSRF token meta tag not found!');\n        return;\n      }\n      const csrfToken = csrfTokenElement.getAttribute('content');\n      const response = await fetch('/inflation', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/x-www-form-urlencoded',\n          'Accept': 'application/json',\n          'X-Requested-With': 'XMLHttpRequest'\n        },\n        body: `draft_id=${draftId}&csrf_token=${csrfToken}`\n      });\n      const data = await response.json();\n      setInflationData(data);\n    } catch (error) {\n      console.error('Error fetching inflation data:', error);\n    }\n  }\n  async function fetchScatterData() {\n    try {\n      const response = await fetch(`http://127.0.0.1:5050/scatter_data?draft_id=${draftId}`);\n      const data = await response.json();\n      if (data && data.scatterplot) {\n        const trace = {\n          x: data.scatterplot.pick_no,\n          y: data.scatterplot.metadata_amount,\n          mode: 'markers',\n          marker: {\n            color: data.scatterplot.colors,\n            size: 10\n          },\n          text: data.scatterplot.player_names\n        };\n        const layout = {\n          xaxis: {\n            title: 'Pick Number'\n          },\n          yaxis: {\n            title: 'Amount'\n          }\n        };\n        Plotly.react('scatterPlot', [trace], layout);\n        setScatterDataLoaded(true);\n      }\n    } catch (error) {\n      console.error('Error fetching scatter data:', error);\n    }\n  }\n  const handleToggleSwitch = () => {\n    setLiveUpdate(!liveUpdate);\n  };\n  const handleDraftIdChange = e => {\n    setDraftId(e.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Control Board\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        margin: '1rem 0'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Live Update:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"liveUpdateSwitch\",\n        onChange: handleToggleSwitch,\n        type: \"checkbox\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"draft_id\",\n        children: \"Enter Draft ID:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"draft_id\",\n        name: \"draft_id\",\n        type: \"text\",\n        value: draftId,\n        onChange: handleDraftIdChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: fetchScatterData,\n      children: \"Load Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tab\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"tablinks\",\n        onClick: () => setScatterDataLoaded(false),\n        children: \"Inflation Data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"tablinks\",\n        onClick: fetchScatterData,\n        children: \"Picks Over Time\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this), inflationData && /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"InflationData\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Overall Inflation\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        id: \"overall-inflation-display\",\n        children: [\"Overall Inflation: \", inflationData.overall_inflation]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Positional Inflation\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"ScatterPlot\",\n      style: {\n        display: scatterDataLoaded ? 'block' : 'none'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Draft Plot\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"scatterPlot\",\n        style: {\n          height: '600px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"ZhBO1iVQXjwsFz5l0Y4NVSgvWX4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Plotly","jsxDEV","_jsxDEV","App","_s","scatterDataLoaded","setScatterDataLoaded","inflationData","setInflationData","liveUpdate","setLiveUpdate","draftId","setDraftId","interval","setInterval","fetchInflationData","fetchScatterData","clearInterval","csrfTokenElement","document","querySelector","console","error","csrfToken","getAttribute","response","fetch","method","headers","body","data","json","scatterplot","trace","x","pick_no","y","metadata_amount","mode","marker","color","colors","size","text","player_names","layout","xaxis","title","yaxis","react","handleToggleSwitch","handleDraftIdChange","e","target","value","children","fileName","_jsxFileName","lineNumber","columnNumber","style","margin","id","onChange","type","htmlFor","name","onClick","className","overall_inflation","display","height","_c","$RefreshReg$"],"sources":["/Users/khoff/Code/inflaction_calculator/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Plotly from 'plotly.js-dist';\n\nfunction App() {\n    const [scatterDataLoaded, setScatterDataLoaded] = useState(false);\n    const [inflationData, setInflationData] = useState(null);\n    const [liveUpdate, setLiveUpdate] = useState(false);\n    const [draftId, setDraftId] = useState(\"\");\n\n    useEffect(() => {\n        if (liveUpdate) {\n            const interval = setInterval(() => {\n                fetchInflationData();\n                fetchScatterData();\n            }, 2000);\n            return () => clearInterval(interval);\n        }\n    }, [liveUpdate]);\n\n    async function fetchInflationData() {\n        try {\n            const csrfTokenElement = document.querySelector('meta[name=\"csrf-token\"]');\n            if (!csrfTokenElement) {\n                console.error('CSRF token meta tag not found!');\n                return;\n            }\n            const csrfToken = csrfTokenElement.getAttribute('content');\n\n            const response = await fetch('/inflation', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/x-www-form-urlencoded',\n                    'Accept': 'application/json',\n                    'X-Requested-With': 'XMLHttpRequest'\n                },\n                body: `draft_id=${draftId}&csrf_token=${csrfToken}`\n            });\n            const data = await response.json();\n            setInflationData(data);\n        } catch (error) {\n            console.error('Error fetching inflation data:', error);\n        }\n    }\n\n    async function fetchScatterData() {\n        try {\n            const response = await fetch(`http://127.0.0.1:5050/scatter_data?draft_id=${draftId}`);\n            const data = await response.json();\n            if (data && data.scatterplot) {\n                const trace = {\n                    x: data.scatterplot.pick_no,\n                    y: data.scatterplot.metadata_amount,\n                    mode: 'markers',\n                    marker: {\n                        color: data.scatterplot.colors,\n                        size: 10\n                    },\n                    text: data.scatterplot.player_names\n                };\n                const layout = {\n                    xaxis: { title: 'Pick Number' },\n                    yaxis: { title: 'Amount' }\n                };\n                Plotly.react('scatterPlot', [trace], layout);\n                setScatterDataLoaded(true);\n            }\n        } catch (error) {\n            console.error('Error fetching scatter data:', error);\n        }\n    }\n\n    const handleToggleSwitch = () => {\n        setLiveUpdate(!liveUpdate);\n    };\n\n    const handleDraftIdChange = (e) => {\n        setDraftId(e.target.value);\n    };\n\n    return (\n        <div>\n            <h1>Control Board</h1>\n            <div style={{ margin: '1rem 0' }}>\n                <label>Live Update:</label>\n                <input id=\"liveUpdateSwitch\" onChange={handleToggleSwitch} type=\"checkbox\" />\n            </div>\n            <form>\n                <label htmlFor=\"draft_id\">Enter Draft ID:</label>\n                <input id=\"draft_id\" name=\"draft_id\" type=\"text\" value={draftId} onChange={handleDraftIdChange} />\n            </form>\n            <button onClick={fetchScatterData}>Load Data</button>\n\n            <div className=\"tab\">\n                <button className=\"tablinks\" onClick={() => setScatterDataLoaded(false)}>Inflation Data</button>\n                <button className=\"tablinks\" onClick={fetchScatterData}>Picks Over Time</button>\n            </div>\n\n            {inflationData && (\n                <div id=\"InflationData\">\n                    <h2>Overall Inflation</h2>\n                    <p id=\"overall-inflation-display\">Overall Inflation: {inflationData.overall_inflation}</p>\n                    <h2>Positional Inflation</h2>\n                    {/* Render positional inflation table */}\n                </div>\n            )}\n\n            <div id=\"ScatterPlot\" style={{ display: scatterDataLoaded ? 'block' : 'none' }}>\n                <h2>Draft Plot</h2>\n                <div id=\"scatterPlot\" style={{ height: '600px' }}></div>\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}