{"ast":null,"code":"var _jsxFileName = \"/Users/khoff/Code/inflaction_calculator/frontend/src/components/ScatterPlot.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport Plot from 'react-plotly.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ScatterPlot({\n  draftId\n}) {\n  _s();\n  const [scatterData, setScatterData] = useState(null);\n  const [r2Data, setR2Data] = useState(null);\n  useEffect(() => {\n    const fetchScatterData = async () => {\n      try {\n        const response = await axios.get(`/scatter_data?draft_id=${draftId}`);\n        if (response.data) {\n          setScatterData(response.data.scatterplot);\n          setR2Data(response.data.r2_values);\n        }\n      } catch (error) {\n        console.error('Error fetching scatter data:', error);\n      }\n    };\n    fetchScatterData();\n  }, [draftId]);\n  if (!scatterData) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 30\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Plot, {\n      data: [{\n        x: scatterData.pick_no,\n        y: scatterData.metadata_amount,\n        mode: 'markers',\n        marker: {\n          color: scatterData.colors,\n          size: 10\n        },\n        text: scatterData.player_names\n      }],\n      layout: {\n        xaxis: {\n          title: 'Pick Number'\n        },\n        yaxis: {\n          title: 'Amount'\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n}\n_s(ScatterPlot, \"SFByVFiiU+NOV/GSD+EEiv87PMI=\");\n_c = ScatterPlot;\nexport default ScatterPlot;\nvar _c;\n$RefreshReg$(_c, \"ScatterPlot\");","map":{"version":3,"names":["React","useEffect","useState","axios","Plot","jsxDEV","_jsxDEV","ScatterPlot","draftId","_s","scatterData","setScatterData","r2Data","setR2Data","fetchScatterData","response","get","data","scatterplot","r2_values","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","x","pick_no","y","metadata_amount","mode","marker","color","colors","size","text","player_names","layout","xaxis","title","yaxis","_c","$RefreshReg$"],"sources":["/Users/khoff/Code/inflaction_calculator/frontend/src/components/ScatterPlot.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport Plot from 'react-plotly.js';\n\nfunction ScatterPlot({ draftId }) {\n    const [scatterData, setScatterData] = useState(null);\n    const [r2Data, setR2Data] = useState(null);\n\n    useEffect(() => {\n        const fetchScatterData = async () => {\n            try {\n                const response = await axios.get(`/scatter_data?draft_id=${draftId}`);\n                if (response.data) {\n                    setScatterData(response.data.scatterplot);\n                    setR2Data(response.data.r2_values);\n                }\n            } catch (error) {\n                console.error('Error fetching scatter data:', error);\n            }\n        };\n\n        fetchScatterData();\n    }, [draftId]);\n\n    if (!scatterData) return <div>Loading...</div>;\n\n    return (\n        <div>\n            <Plot\n                data={[\n                    {\n                        x: scatterData.pick_no,\n                        y: scatterData.metadata_amount,\n                        mode: 'markers',\n                        marker: { color: scatterData.colors, size: 10 },\n                        text: scatterData.player_names,\n                    },\n                ]}\n                layout={{ xaxis: { title: 'Pick Number' }, yaxis: { title: 'Amount' } }}\n            />\n            {/* Additional display of R^2 data */}\n        </div>\n    );\n}\n\nexport default ScatterPlot;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,IAAI,MAAM,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnC,SAASC,WAAWA,CAAC;EAAEC;AAAQ,CAAC,EAAE;EAAAC,EAAA;EAC9B,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM,CAACU,MAAM,EAAEC,SAAS,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAE1CD,SAAS,CAAC,MAAM;IACZ,MAAMa,gBAAgB,GAAG,MAAAA,CAAA,KAAY;MACjC,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAMZ,KAAK,CAACa,GAAG,CAAC,0BAA0BR,OAAO,EAAE,CAAC;QACrE,IAAIO,QAAQ,CAACE,IAAI,EAAE;UACfN,cAAc,CAACI,QAAQ,CAACE,IAAI,CAACC,WAAW,CAAC;UACzCL,SAAS,CAACE,QAAQ,CAACE,IAAI,CAACE,SAAS,CAAC;QACtC;MACJ,CAAC,CAAC,OAAOC,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;MACxD;IACJ,CAAC;IAEDN,gBAAgB,CAAC,CAAC;EACtB,CAAC,EAAE,CAACN,OAAO,CAAC,CAAC;EAEb,IAAI,CAACE,WAAW,EAAE,oBAAOJ,OAAA;IAAAgB,QAAA,EAAK;EAAU;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;EAE9C,oBACIpB,OAAA;IAAAgB,QAAA,eACIhB,OAAA,CAACF,IAAI;MACDa,IAAI,EAAE,CACF;QACIU,CAAC,EAAEjB,WAAW,CAACkB,OAAO;QACtBC,CAAC,EAAEnB,WAAW,CAACoB,eAAe;QAC9BC,IAAI,EAAE,SAAS;QACfC,MAAM,EAAE;UAAEC,KAAK,EAAEvB,WAAW,CAACwB,MAAM;UAAEC,IAAI,EAAE;QAAG,CAAC;QAC/CC,IAAI,EAAE1B,WAAW,CAAC2B;MACtB,CAAC,CACH;MACFC,MAAM,EAAE;QAAEC,KAAK,EAAE;UAAEC,KAAK,EAAE;QAAc,CAAC;QAAEC,KAAK,EAAE;UAAED,KAAK,EAAE;QAAS;MAAE;IAAE;MAAAjB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3E;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAED,CAAC;AAEd;AAACjB,EAAA,CAvCQF,WAAW;AAAAmC,EAAA,GAAXnC,WAAW;AAyCpB,eAAeA,WAAW;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}