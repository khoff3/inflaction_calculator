{"ast":null,"code":"import React,{useEffect,useState}from'react';import axios from'axios';import{Table}from'react-bootstrap';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function InflationData(_ref){let{draftId,liveUpdate}=_ref;const[inflationData,setInflationData]=useState(null);useEffect(()=>{const fetchInflationData=async()=>{if(!draftId)return;try{const csrfToken=document.querySelector('meta[name=\"csrf-token\"]').getAttribute('content');const response=await axios.post('http://localhost:5050/inflation',{draft_id:draftId},{headers:{'X-CSRFToken':csrfToken}});setInflationData(response.data);}catch(error){console.error('Error fetching inflation data:',error);}};if(liveUpdate){fetchInflationData();const interval=setInterval(fetchInflationData,10000);return()=>clearInterval(interval);}else{fetchInflationData();}},[draftId,liveUpdate]);const get_color_class=value=>{if(value>0.15)return'severe-positive';if(value>0.1)return'moderate-positive';if(value>0.05)return'mild-positive';if(value<-0.15)return'severe-negative';if(value<-0.1)return'moderate-negative';if(value<-0.05)return'mild-negative';return'neutral';};if(!inflationData)return/*#__PURE__*/_jsx(\"div\",{children:\"Loading...\"});return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Overall Inflation\"}),/*#__PURE__*/_jsxs(\"p\",{id:\"overall-inflation-display\",children:[\"Overall Inflation: \",(inflationData.overall_inflation*100).toFixed(2),\"%\"]}),/*#__PURE__*/_jsx(\"h2\",{children:\"Positional Inflation\"}),/*#__PURE__*/_jsxs(Table,{children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"Position\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Inflation (%)\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Number of Picks\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:Object.keys(inflationData.positional_inflation).map(position=>/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:position}),/*#__PURE__*/_jsx(\"td\",{className:get_color_class(inflationData.positional_inflation[position]),children:inflationData.positional_inflation[position]!=='N/A'?`${(inflationData.positional_inflation[position]*100).toFixed(2)}%`:'N/A'}),/*#__PURE__*/_jsx(\"td\",{children:inflationData.total_picks[position]})]},position))})]}),/*#__PURE__*/_jsx(\"h2\",{children:\"Tiered Inflation\"}),/*#__PURE__*/_jsx(\"div\",{className:\"tiered-inflation\",children:Object.keys(inflationData.tiered_inflation).map(position=>/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h3\",{children:position.toUpperCase()}),/*#__PURE__*/_jsxs(Table,{children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"Tier\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Inflation (%)\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Picks\"}),/*#__PURE__*/_jsx(\"th\",{children:\"DOE ($)\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Avg Cost ($)\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:Object.keys(inflationData.tiered_inflation[position]).map(tier=>{var _inflationData$picks_,_inflationData$doe_va,_inflationData$doe_va2,_inflationData$avg_ti;return/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:tier}),/*#__PURE__*/_jsxs(\"td\",{id:`${position}-${tier}-inflation`,className:get_color_class(inflationData.tiered_inflation[position][tier]),children:[(inflationData.tiered_inflation[position][tier]*100).toFixed(2),\"%\"]}),/*#__PURE__*/_jsx(\"td\",{id:`${position}-${tier}-picks`,children:((_inflationData$picks_=inflationData.picks_per_tier[position])===null||_inflationData$picks_===void 0?void 0:_inflationData$picks_[tier])||'0'}),/*#__PURE__*/_jsxs(\"td\",{id:`${position}-${tier}-doe`,className:get_color_class(((_inflationData$doe_va=inflationData.doe_values[position])===null||_inflationData$doe_va===void 0?void 0:_inflationData$doe_va[tier])||0),children:[\"$\",(_inflationData$doe_va2=inflationData.doe_values[position])===null||_inflationData$doe_va2===void 0?void 0:_inflationData$doe_va2[tier].toFixed(2)]}),/*#__PURE__*/_jsxs(\"td\",{id:`${position}-${tier}-avg_cost`,children:[\"$\",(_inflationData$avg_ti=inflationData.avg_tier_costs[position])===null||_inflationData$avg_ti===void 0?void 0:_inflationData$avg_ti[tier].toFixed(2)]})]},tier);})})]})]},position))})]});}export default InflationData;","map":{"version":3,"names":["React","useEffect","useState","axios","Table","jsx","_jsx","jsxs","_jsxs","InflationData","_ref","draftId","liveUpdate","inflationData","setInflationData","fetchInflationData","csrfToken","document","querySelector","getAttribute","response","post","draft_id","headers","data","error","console","interval","setInterval","clearInterval","get_color_class","value","children","id","overall_inflation","toFixed","Object","keys","positional_inflation","map","position","className","total_picks","tiered_inflation","toUpperCase","tier","_inflationData$picks_","_inflationData$doe_va","_inflationData$doe_va2","_inflationData$avg_ti","picks_per_tier","doe_values","avg_tier_costs"],"sources":["/Users/khoff/Code/inflaction_calculator/frontend/src/components/InflationData.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { Table } from 'react-bootstrap';\n\nfunction InflationData({ draftId, liveUpdate }) {\n  const [inflationData, setInflationData] = useState(null);\n\n  useEffect(() => {\n    const fetchInflationData = async () => {\n      if (!draftId) return;\n      try {\n        const csrfToken = document.querySelector('meta[name=\"csrf-token\"]').getAttribute('content');\n        const response = await axios.post(\n          'http://localhost:5050/inflation',\n          { draft_id: draftId },\n          {\n            headers: {\n              'X-CSRFToken': csrfToken,\n            },\n          }\n        );\n        setInflationData(response.data);\n      } catch (error) {\n        console.error('Error fetching inflation data:', error);\n      }\n    };\n\n    if (liveUpdate) {\n      fetchInflationData();\n      const interval = setInterval(fetchInflationData, 10000);\n      return () => clearInterval(interval);\n    } else {\n      fetchInflationData();\n    }\n  }, [draftId, liveUpdate]);\n\n  const get_color_class = (value) => {\n    if (value > 0.15) return 'severe-positive';\n    if (value > 0.1) return 'moderate-positive';\n    if (value > 0.05) return 'mild-positive';\n    if (value < -0.15) return 'severe-negative';\n    if (value < -0.1) return 'moderate-negative';\n    if (value < -0.05) return 'mild-negative';\n    return 'neutral';\n  };\n\n  if (!inflationData) return <div>Loading...</div>;\n\n  return (\n    <div>\n      <h2>Overall Inflation</h2>\n      <p id=\"overall-inflation-display\">\n        Overall Inflation: {(inflationData.overall_inflation * 100).toFixed(2)}%\n      </p>\n      <h2>Positional Inflation</h2>\n      <Table>\n        <thead>\n          <tr>\n            <th>Position</th>\n            <th>Inflation (%)</th>\n            <th>Number of Picks</th>\n          </tr>\n        </thead>\n        <tbody>\n          {Object.keys(inflationData.positional_inflation).map((position) => (\n            <tr key={position}>\n              <td>{position}</td>\n              <td className={get_color_class(inflationData.positional_inflation[position])}>\n                {inflationData.positional_inflation[position] !== 'N/A'\n                  ? `${(inflationData.positional_inflation[position] * 100).toFixed(2)}%`\n                  : 'N/A'}\n              </td>\n              <td>{inflationData.total_picks[position]}</td>\n            </tr>\n          ))}\n        </tbody>\n      </Table>\n      <h2>Tiered Inflation</h2>\n      <div className=\"tiered-inflation\">\n        {Object.keys(inflationData.tiered_inflation).map((position) => (\n          <div key={position}>\n            <h3>{position.toUpperCase()}</h3>\n            <Table>\n              <thead>\n                <tr>\n                  <th>Tier</th>\n                  <th>Inflation (%)</th>\n                  <th>Picks</th>\n                  <th>DOE ($)</th>\n                  <th>Avg Cost ($)</th>\n                </tr>\n              </thead>\n              <tbody>\n                {Object.keys(inflationData.tiered_inflation[position]).map((tier) => (\n                  <tr key={tier}>\n                    <td>{tier}</td>\n                    <td\n                      id={`${position}-${tier}-inflation`}\n                      className={get_color_class(inflationData.tiered_inflation[position][tier])}\n                    >\n                      {(inflationData.tiered_inflation[position][tier] * 100).toFixed(2)}%\n                    </td>\n                    <td id={`${position}-${tier}-picks`}>\n                      {inflationData.picks_per_tier[position]?.[tier] || '0'}\n                    </td>\n                    <td\n                      id={`${position}-${tier}-doe`}\n                      className={get_color_class(inflationData.doe_values[position]?.[tier] || 0)}\n                    >\n                      ${inflationData.doe_values[position]?.[tier].toFixed(2)}\n                    </td>\n                    <td id={`${position}-${tier}-avg_cost`}>\n                      ${inflationData.avg_tier_costs[position]?.[tier].toFixed(2)}\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </Table>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default InflationData;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}